% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/naive_RIT.R
\name{naive_RIT}
\alias{naive_RIT}
\title{Random Intersection Trees with discretization.}
\usage{
naive_RIT(data, classes, theta, disc = "ameva", disc_p, branch = 3,
  depth = 10L, split_nb = 1, n_trees = 100L, min_inter_sz = 2L,
  L = 100L, es = TRUE)
}
\arguments{
\item{data}{The dataset as a dataframe.}

\item{classes}{A response vector for the dataset.}

\item{theta}{The prevalence thresholds. Used to determine if an interaction is informative of not w.r.t. the classes.}

\item{disc}{The method used to discretize the dataset and transform it into a binary format. Possible values are \code{"ameva"}, \code{"caim"}, \code{"chim"} and \code{"eqwidth"} which correspond to the Ameva, CAIM, ChiMerge and Equal-width binning discretization methods.}

\item{disc_p}{This is the parameter passed to the discretization algorithm. If \code{disc} is \code{"chim"}, this is the level of significance. If \code{disc} is \code{"eqwith"}, this is the number of bins. In all other cases, this parameter is ignored.}

\item{branch}{The branching factor in the interaction search.}

\item{depth}{The depth of the interaction search.}

\item{split_nb}{The number of intersections that should be succesively computed before splitting the search into \code{branch} children.}

\item{n_trees}{The number of trees.}

\item{min_inter_sz}{The minimum allowed size of interactions.}

\item{L}{The number of permutations that should be used to estimate the prevalences. If \code{L} is 0, the exact prevalences are computed from \code{data} and \code{classes}.}

\item{es}{A logical that indicates whether or not early stopping should be used.}
}
\value{
A model that is composed of all informative interactions found in the dataset.
}
\description{
Executes the algorithm known as Random Intersection Trees with discretization.
}
\references{
Ballarini Robin. Random intersection trees for genomic data analysis. Master's thesis, Université Catholique de Louvain, 2016.

L. Gonzalez-Abril, F. J. Cuberos, F. Velasco, and J. A. Ortega. Ameva: An autonomous discretization algorithm. Expert Systems with Applications, 36:5327–5332, 2009.

L. A. Kurgan and K. J. Cios. Caim discretization algorithm. IEEE Transactions on knowledge and data engineering, 16(2):145–153, February 2004.

Kerber Randy. Chimerge: Discretization of numeric attributes. In Proceedings of AAAI-92, 1992.
}

